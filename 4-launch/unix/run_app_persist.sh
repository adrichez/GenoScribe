#!/usr/bin/env bash
set -e

# Comprobar argumentos
if [ -z "$1" ] || [ -z "$2" ]; then
  echo "Uso: $0 /ruta/datos_usuario /ruta/reportes_usuario"
  exit 1
fi

DATOS="$1"
REPORTS="$2"
PORT=3838
CONTAINER_NAME="genoscribe_container"
DATOS_BASENAME=$(basename "$DATOS")

# Asegurar permisos de escritura en la carpeta de reportes
if [ -d "$REPORTS" ]; then
    echo "
‚öôÔ∏è  Realizando ajustes iniciales...
----------------------------------------
üîß Ajustando permisos de la carpeta de reportes..."
    chmod -R a+rw "$REPORTS"

    echo "‚úÖ Permisos ajustados."
fi

# Comprobar si el puerto est√° en uso
if lsof -i :$PORT >/dev/null 2>&1; then
  echo "‚ö†Ô∏è  Puerto $PORT en uso."
  
  CONTAINER_ID=$(docker ps -q --filter "publish=$PORT")
  if [ -n "$CONTAINER_ID" ]; then
    echo "üõë Deteniendo contenedor que usa el puerto...
    "
    docker stop "$CONTAINER_ID"
    sleep 2
  else
    echo "üîí Cerrando proceso que usa el puerto..."
    lsof -i :$PORT | awk 'NR>1 {print $2}' | xargs kill -9 2>/dev/null
    sleep 2
  fi
  echo "
‚úÖ Puerto $PORT liberado."
fi

echo "

üöÄ Iniciando GenoScribe...
--------------------------
üìÇ Datos de usuario: $DATOS
üìÇ Carpeta de reportes: $REPORTS
üåê La app estar√° disponible en: http://localhost:$PORT/app"

# Arrancar contenedor existente o crear uno nuevo
if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
    echo "‚ôªÔ∏è  Reutilizando contenedor existente...
‚è≥ Entrando en el contenedor...
    "

    docker start "$CONTAINER_NAME"

else
    echo "üèóÔ∏è  Creando contenedor...
‚è≥ Esperando a que el contenedor est√© listo...
    "

    docker run -dit --name "$CONTAINER_NAME" -p $PORT:3838 \
      -v "$DATOS":/data/"$DATOS_BASENAME" \
      -v "$REPORTS":/srv/shiny-server/app/www/reports \
      genoscribe
fi

echo "

üöÄÔ∏è Lanzando ajustes iniciales del entrypoint...
-----------------------------------------------
üëç Carpetas y permisos listos. 
‚öôÔ∏è  Arrancando Shiny Server...
üöÄ Iniciando aplicaci√≥n...
‚è≥ Esperando a que el servidor est√© listo...
"

# Esperar hasta que Shiny responda
until curl -s "http://localhost:$PORT/app" >/dev/null; do
    sleep 1
done

echo "
üèÅ Proceso finalizado
---------------------
‚úÖ Servidor listo.
‚è≥ Abriendo navegador...
"

# Abrir navegador seg√∫n sistema
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    xdg-open "http://localhost:$PORT/app"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    open "http://localhost:$PORT/app"
elif [[ "$OSTYPE" == "msys" ]]; then
    start "http://localhost:$PORT/app"
fi
