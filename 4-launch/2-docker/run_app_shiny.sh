#!/usr/bin/env bash
set -e

echo "
-------------------------------------------------------------
üöÄ Lanzando App GenoScribe desde la interfaz gr√°fica de Shiny
-------------------------------------------------------------
"

# Configuraci√≥n de variables
PORT=3838
CONTAINER_NAME="genoscribe_container"
DATOS_BASENAME=$(basename "$DATOS")

# Variables adicionales
echo "üìÑ Proporcione los siguientes elementos:"
echo "----------------------------------------"
read -p "---> Ruta a la carpeta de datos resultado del an√°lisis: " DATOS
read -p "---> Ruta local de la carpeta donde se guardar√°n los reportes: " REPORTS
echo ""

# Asegurar permisos de escritura en la carpeta de reportes
if [ -d "$REPORTS" ]; then
    echo "‚öôÔ∏è  Realizando ajustes iniciales..."
    echo "-----------------------------------"
    echo "üîß Ajustando permisos de la carpeta de reportes..."

    chmod -R a+rw "$REPORTS"

    echo "‚úÖ Permisos ajustados."
fi

# Comprobar si el puerto est√° en uso
if lsof -i :$PORT >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Puerto $PORT en uso."

    CONTAINER_ID=$(docker ps -q --filter "publish=$PORT")
    if [ -n "$CONTAINER_ID" ]; then
        echo "üõë Deteniendo contenedor que usa el puerto..."
        echo ""
        docker stop "$CONTAINER_ID"
        sleep 2
    else
        echo "üîí Cerrando proceso que usa el puerto..."
        lsof -i :$PORT | awk 'NR>1 {print $2}' | xargs kill -9 2>/dev/null
        sleep 2
    fi
    echo ""
    echo "‚úÖ Puerto $PORT liberado."
fi

echo ""
echo "üöÄ Iniciando GenoScribe..."
echo "--------------------------"
echo "üìÇ Datos de usuario: $DATOS"
echo "üìÇ Carpeta de reportes: $REPORTS"
echo "üåê La app estar√° disponible en: http://localhost:$PORT/app"
echo ""

# Preguntar si el contenedor debe ser persistente o temporal
echo "üìÑ Seleccione el tipo de contenedor:"
echo "------------------------------------"
echo "  1) Persistente (no se elimina al detenerse)"
echo "  2) Temporal (se elimina autom√°ticamente al detenerse)"
read -p "---> Ingrese el n√∫mero correspondiente: " CONT_TYPE
echo ""

echo "üê≥ Comprobando contenedor..."
echo "----------------------------"

# Arrancar contenedor existente o crear uno nuevo
if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
    echo "‚úÖ Contenedor '$CONTAINER_NAME' ya existe."
    if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
        echo "‚ôªÔ∏è  Contenedor '$CONTAINER_NAME' ya est√° corriendo."
    else
        echo "‚ö†Ô∏è  Contenedor '$CONTAINER_NAME' est√° detenido. Iniciando..."
        echo "‚èØÔ∏è  Iniciando..."
        docker start "$CONTAINER_NAME"
        sleep 2
    fi
else
    echo "‚ö†Ô∏è  Contenedor '$CONTAINER_NAME' no existe."
    echo "üèóÔ∏è  Creando contenedor '$CONTAINER_NAME' en modo $CONT_MODE..."

    if [ "$CONT_TYPE" -eq 1 ]; then
        docker run -dit --name "$CONTAINER_NAME" -p $PORT:3838 \
            -v "$DATOS":/data/"$DATOS_BASENAME" \
            -v "$REPORTS":/srv/shiny-server/app/www/reports \
            genoscribe
    elif [ "$CONT_TYPE" -eq 2 ]; then
        docker run -dit --rm --name "$CONTAINER_NAME" -p $PORT:3838 \
            -v "$DATOS":/data/"$DATOS_BASENAME" \
            -v "$REPORTS":/srv/shiny-server/app/www/reports \
            genoscribe
    else
        echo "‚ùå Opci√≥n no v√°lida. Abortando."
        exit 1
    fi
fi

echo "‚úÖ Contenedor '$CONTAINER_NAME' listo."
echo ""

echo "üöÄÔ∏è Lanzando ajustes iniciales del entrypoint..."
echo "-----------------------------------------------"
echo "üëç Carpetas y permisos listos."
echo "‚öôÔ∏è  Arrancando Shiny Server..."
echo "üöÄ Iniciando aplicaci√≥n..."
echo "‚è≥ Esperando a que el servidor est√© listo..."

# Esperar hasta que Shiny responda
until curl -s "http://localhost:$PORT/app" >/dev/null; do
    sleep 1
done

echo ""
echo "üèÅ Proceso finalizado"
echo "---------------------"
echo "‚úÖ Servidor listo."
echo "‚è≥ Abriendo navegador..."
echo ""

# Abrir navegador seg√∫n sistema
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    xdg-open "http://localhost:$PORT/app"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    open "http://localhost:$PORT/app"
elif [[ "$OSTYPE" == "msys" ]]; then
    start "http://localhost:$PORT/app"
fi
